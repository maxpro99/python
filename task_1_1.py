answer = 'Wrong answer'

while not answer.isdigit():
    answer = input('Введите промежуток времени в секундах (цифрами целое число от 0 до 64000):')

duration = int(answer)
print(duration, 'секунд - это :')

# В задаче нет ЧЕТКИХ критериев ответа (вывода)
#
# Вот, для примера задача с рекомекнедованнгого вами codewars
#
# Write a function, which takes a non-negative integer (seconds)
# as input and returns the time in a human-readable format (HH:MM:SS)
#
# HH = hours, padded to 2 digits, range: 00 - 99
# MM = minutes, padded to 2 digits, range: 00 - 59
# SS = seconds, padded to 2 digits, range: 00 - 59
# The maximum time never exceeds 359999 (99:59:59)
#
# You can find some examples in the test fixtures.
#
# И вот моё решение:
# def make_readable(seconds):
#     return f'{seconds//3600:0>2}:{seconds//60%60:0>2}:{seconds%60:0>2}'
#
# Аккуратно, в одну строчку
# Дальше сошелся на таком варианте:
# make_readable = lambda s:f'{s//3600:02}:{s//60%60:02}:{s%60:02}'
#
# Но в задаче, которая дана на курсе критериев ответа нет.
# Сами задачи тоже немного разняться в методичке и на курсе.
# Поэтому сделано несколько вариантов, от простого к сложному
# А вычисления из вариантов не вынесены, поскольку каждый вариант
# самодостаточен и остальные могут быть удалены без разбора в коде
# Про if я конечно знаю, но тут логика была именно в том, что
# не понятно какой верный, а не просто варианты.
#
# Вычисления не сокращены от 60*60 до 3600 для легкости волсприятия
#
# Варианты расположены от простого к сложному (по длине кода)
# Первый вариант на вход 1 выдаст 0 дней, 0 минут, 1 секунду
#
print(f"{duration // (24 * 60 * 60)} дн {duration // (60 * 60) % 24} час {duration // 60 % 60} мин {duration % 60} сек")
# Думаю, что вы согласитесь, что нет смысла упоминать дни и минуты при
# размерности времени в секундах.
# Думаю, большинство решило эту задачу близко к этому варианту.
# Но, прочитав задания, скорее окажется, что не нужно упоминать
# большие размерности при их отсутствии.
#
# Посмотрите:
#
# 1. Реализовать вывод информации о промежутке времени в зависимости от его продолжительности duration в секундах:
# до минуты: <s> сек;
# * до часа: <m> мин <s> сек;
# * до суток: <h> час <m> мин <s> сек;
# * *до месяца, до года, больше года: по аналогии.
#
# т.е. при входе до минуты в ответе упоминаются только секунды.
#
# Поэтому я пошел в своих вариантах дальше:
#
# вариант в котором 0 не будут печататься кроме секунд, но даже в середине(
# т.е. может быть 2 дня 1 секунда
# часы и минуты здесь не упомянуты, если они равны 0
# уже лучше, но не совсем, как в задании
print(f"{duration // (24 * 60 * 60)} дн " * bool(duration // (24 * 60 * 60)) +
      f"{duration // (60 * 60) % 24} час " * bool(duration // (60 * 60) % 24) +
      f"{duration // 60 % 60} мин " * bool(duration // 60 % 60) +
      f"{duration % 60} сек")

# В этом варианте в котором 0 не будут печататься и в секундах тоже,
# т.е. может быть 2 дня ил и плохой вариант при входе - 0 не будет напечатано ничего.
print(f"{duration // (24 * 60 * 60)} дн " * bool(duration // (24 * 60 * 60)) +
      f"{duration // (60 * 60) % 24} час " * bool(duration // (60 * 60) % 24) +
      f"{duration // 60 % 60} мин " * bool(duration // 60 % 60) +
      f"{duration % 60} сек" * bool(duration % 60))

# В этом варианте если есть какие-то старшие разряды, например дни,
# то и минуты и часы будут упомянуты, даже если они равны 0
# Это максимально близко к заданию, но 0 секунд по прежнему не отобразятся
print(f"{duration // (24 * 60 * 60)} дн " * bool(duration // (24 * 60 * 60)) +
      f"{duration // (60 * 60) % 24} час " * bool(
    bool(duration // (60 * 60) % 24) or bool(duration // (24 * 60 * 60))) +
      f"{duration // 60 % 60} мин " * bool(
    bool(duration // 60 % 60) or bool(duration // (60 * 60) % 24) or bool(duration // (24 * 60 * 60))) +
      f"{duration % 60} сек")

# До месяца и года не было в изначальном задании,
# И опять нет чеких критериев месяца. Да и года високосного тоже.
# Да даже и год считать для понимания кода я думаю проще именно один принт,
# чем циклы и списки
# Касаемо универсального калькулятора, который переводит величины по заданным планкам,
# можно было бы написать
# метры в сантиметры и километры, да и в версты, и вершки
# Прошу вас подумать над нюансами написания
# заданий при обучению программированию
# Уверен, что вы знаете случаи, когда результат был неверным именно
# из-за некорректного задания.
